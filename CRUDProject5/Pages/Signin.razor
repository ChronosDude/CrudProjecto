@page "/signin"
@using System.Net.Http;
@using System.Net.Http.Json;
@using CRUDProject5.Data;
@inject HttpClient Http;
@inject NavigationManager Navegacion;
@inject IJSRuntime _jsRuntime
@using Microsoft.Extensions.Logging
@inject ILogger<Signin> Logger
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment
@using System.Text.Json
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Builder;
@using Microsoft.Extensions.DependencyInjection;
@using CRUDProject5;



<main class="flex-shrink-0">

    <!-- Page content-->
    <section class="py-5">
        <div class="container px-5">
            <!-- Contact form-->
            <div class="bg-light rounded-3 py-5 px-4 px-md-5 mb-5">
                <div class="text-center mb-5">
                    <div class="feature bg-primary bg-gradient text-white rounded-3 mb-3"><i class="bi bi-peson-fill"></i></div>
                    <h1 class="fw-bolder">Nuevo Usuario</h1>
                    <p class="lead fw-normal text-muted mb-0">Ingresa los datos solicitados</p>
                    <p class="lead fw-normal text-muted mb-0">Por el momento solo esta disponible la creacion de usuarion con el rol de clientes</p>
                </div>
                <div class="row gx-5 justify-content-center">
                    <div class="col-lg-8 col-xl-6">
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- * * SB Forms Contact Form * *-->
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- This form is pre-integrated with SB Forms.-->
                        <!-- To make this form functional, sign up at-->
                        <!-- https://startbootstrap.com/solution/contact-forms-->
                        <!-- to get an API token!-->
                        <EditForm Model="ObRep" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <!-- Phone number input-->
                            <div class="form-floating mb-3">
                                <label>Nombre de usuario</label>
                                <InputText id="ubicacion" class="form-control" @bind-Value="@ObRep.UserName"></InputText>
                                
                            </div>

                            <div class="form-floating mb-3">
                                <label>Email</label>
                                <InputText id="Email" class="form-control" @bind-Value="@ObRep.Email"></InputText>

                            </div>
                            <div class="form-floating mb-3">
                                <label for="Nombre">Nombre</label>
                                <InputText id="Nombre" class="form-control" @bind-Value="@ObRep.Name"></InputText>
                               
                            </div>

                            <div class="form-floating mb-3">
                                <label for="Apellido">Apellido</label>
                                <InputText id="Apellido" class="form-control" @bind-Value="@ObRep.LastName"></InputText>

                            </div>

                            <div class="form-floating mb-3">
                                <label for="Contraseña">Contraseña</label>
                                <InputText type="password" id="Contraseña" class="form-control" @bind-Value="@ObRep.Password"></InputText>

                            </div>
                            @if(roleloged=="Master")
                {
                        <div class="form-floating mb-3">
                            <label>Rol</label>
                            <InputSelect @bind-Value="@ObRep.IdRole">
                                <option value="1">Master</option>
                                <option value="2">Administrator</option>
                                <option value="3">Client</option>
                            </InputSelect>
                            
                        </div>

                }




                            <div class=text-center><button class="btn btn-primary btn-lg text-center " @onclick="GuardarUser">Registrarse</button></div>

                        </EditForm>



                    </div>
                </div>
            </div>

        </div>
    </section>
</main>
<!-- Footer-->
<footer class="bg-dark py-4 mt-auto">
    <div class="container px-5">
        <div class="row align-items-center justify-content-between flex-column flex-sm-row">
            <div class="col-auto"><div class="small m-0 text-white">Copyright &copy; Universidad Tecnológica Metropolitana 2022</div></div>
            <div class="col-auto">
                <a class="link-light small" href="#!">Privacy</a>
                <span class="text-white mx-1">&middot;</span>
                <a class="link-light small" href="#!">Terms</a>
                <span class="text-white mx-1">&middot;</span>
                <a class="link-light small" href="#!">Contact</a>
            </div>
        </div>
    </div>
</footer>

@code {
    public string userloged { get; set; }
    public string roleloged { get; set; }
    public string nameloged { get; set; }


    User ObRep = new User();
    Respuesta<object> oRes = new Respuesta<object>();
    Respuesta<Report> oResProduct = new Respuesta<Report>();
    public string Url = "api/user";

    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");

        // Process the valid form
    }



    private async Task GuardarUser()


    {
        var response = await Http.PostAsJsonAsync<User>(Url, ObRep);
        oRes = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
        Navegacion.NavigateTo("/");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            userloged = await localStorage.GetItemAsync<string>("IdUserLoged");
            roleloged = await localStorage.GetItemAsync<string>("Rol");
            nameloged = await localStorage.GetItemAsync<string>("nombre");
            StateHasChanged();
        }
        else
        {
            StateHasChanged();
        }

    }





}