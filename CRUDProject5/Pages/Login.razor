@page "/login"
@using System.Net.Http;
@using System.Net.Http.Json;
@using CRUDProject5.Data;
@inject HttpClient Http;
@inject NavigationManager Navegacion;
@inject IJSRuntime _jsRuntime
@using Microsoft.Extensions.Logging
@inject ILogger<NuevoReporte> Logger
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject AuthenticationStateProvider AuthenticationStateProvider


@using System
@using System.IO
@using Microsoft.AspNetCore.Hosting
@inject IWebHostEnvironment Environment
@using System.Text.Json
@using System.Net.Http.Headers
@using Microsoft.AspNetCore.Builder;
@using Microsoft.Extensions.DependencyInjection;
@using CRUDProject5;
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization;






<main class="flex-shrink-0">
   
    <!-- Page content-->
    <section class="py-5">
        <div class="container px-5">
            <!-- Contact form-->
            <div class="bg-light rounded-3 py-5 px-4 px-md-5 mb-5">
                <div class="text-center mb-5">
                    <div class="feature bg-primary bg-gradient text-white rounded-3 mb-3"><i class="bi bi-person-fill"></i></div>
                    <h1 class="fw-bolder">Iniciar Sesión</h1>
                    <p class="lead fw-normal text-muted mb-0">Ingresa tus datos</p>
                    @if (mensa != null)
            {
                <p class="lead fw-normal text-danger mb-0">@mensa</p>
            }
                </div>
                <div class="row gx-5 justify-content-center">
                    <div class="col-lg-8 col-xl-6">
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- * * SB Forms Contact Form * *-->
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- This form is pre-integrated with SB Forms.-->
                        <!-- To make this form functional, sign up at-->
                        <!-- https://startbootstrap.com/solution/contact-forms-->
                        <!-- to get an API token!-->
                        <EditForm Model="ulogin" OnValidSubmit="@HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="form-floating mb-3">
                                <label>
                                    Usuario
                                </label>
                                    <InputText id="latitud" class="form-control" @bind-Value="@ulogin.UserName"></InputText>
                                    
                            </div>
                            <div class="form-floating mb-3">
                                <label> Contraseña </label>
                                    <InputText type="password" id="longitud" class="form-control" @bind-Value="@ulogin.Password"></InputText>

                            </div>


                            <div class="d-grid"><button type="submit" class="btn btn-primary btn-lg " @onclick="UserNEWLogin">Iniciar Sesión</button></div>

                        </EditForm>



                    </div>
                </div>
            </div>

        </div>
    </section>
</main>
<!-- Footer-->
<footer class="bg-dark py-4 mt-auto">
    <div class="container px-5">
        <div class="row align-items-center justify-content-between flex-column flex-sm-row">
            <div class="col-auto"><div class="small m-0 text-white">Copyright &copy; Universidad Tecnológica Metropolitana 2022</div></div>
            <div class="col-auto">
                <a class="link-light small" href="#!">Privacy</a>
                <span class="text-white mx-1">&middot;</span>
                <a class="link-light small" href="#!">Terms</a>
                <span class="text-white mx-1">&middot;</span>
                <a class="link-light small" href="#!">Contact</a>
            </div>
        </div>
    </div>
</footer>

@code {
    UserLogin ulogin = new UserLogin();
    UserLogin oRes = new UserLogin();
    Respuesta<Report> oResProduct = new Respuesta<Report>();
    public string Url = "api/login/Authenticate";

    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");


    }

    string mensa { get; set; }


    public string LoginMesssage { get; set; }
    ClaimsPrincipal claimsPrincipal;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }




    private async Task UserNEWLogin()

    {

        var response = await Http.GetFromJsonAsync<UserLogin>($"api/login/Authenticate?username={ulogin.UserName}&pass={ulogin.Password}");
        //oRes = response.Content.ReadFromJsonAsync<UserLogin>().Result;

        if (response.Email!=null)
        {
            await localStorage.SetItemAsync("nombre", response.Name.ToString());
            await localStorage.SetItemAsync("Rol", response.Rolename.ToString());
            await localStorage.SetItemAsync("IdUserLoged", response.Id.ToString());


            Navegacion.NavigateTo("/",forceLoad:true);
        }
        else
        {
            mensa = "datos incorrectos";
            ulogin.UserName = "";
            ulogin.Password = "";
            Navegacion.NavigateTo("/login");
        }

        //await localStorage.SetItemAsync("nombre", response.Name.ToString());
        //await localStorage.SetItemAsync("Rol", response.Rolename.ToString());
        //await localStorage.SetItemAsync("IdUserLoged", response.Id.ToString());

        //await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(response);






        //Navegacion.NavigateTo("/");


    }






}
